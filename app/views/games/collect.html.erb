<!doctype html> 
<html lang="en"> 
<head> 
	<meta charset="UTF-8" />
    <title>Phaser - Making your first game, part 9</title>
	<script type="text/javascript" src="/assets/pjs/phaser.min.js"></script>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>

<script type="text/javascript">

var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {

    game.load.image('sky', '/assets/phaserassets/cloud.png');
    game.load.image('ground', '/assets/phaserassets/platform.png');
    game.load.image('star', '/assets/phaserassets/star.png');
    game.load.image('seen', '/assets/phaserassets/seen.png');
    game.load.image('sheen', '/assets/phaserassets/sheen.png');
    game.load.image('sad', '/assets/phaserassets/sad.png');
    game.load.image('dad', '/assets/phaserassets/dad.png');
    game.load.image('qaf', '/assets/phaserassets/qaf.png');
    game.load.image('lam', '/assets/phaserassets/lam.png');
    game.load.image('noon', '/assets/phaserassets/noon.png');

     game.load.image('alef', '/assets/phaserassets/alef.png');
     game.load.image('dal', '/assets/phaserassets/dal.png');
     game.load.image('thal', '/assets/phaserassets/thal.png');
     game.load.image('ra2', '/assets/phaserassets/ra2.png');
     game.load.image('zen', '/assets/phaserassets/zen.png');
     game.load.image('waw', '/assets/phaserassets/waw.png');

     game.load.image('geem', '/assets/phaserassets/geem.png');
     game.load.image('ha2', '/assets/phaserassets/ha2.png');
     game.load.image('kha2', '/assets/phaserassets/kha2.png');
     game.load.image('een', '/assets/phaserassets/een.png');
     game.load.image('gheen', '/assets/phaserassets/gheen.png');

     game.load.image('ba2', '/assets/phaserassets/ba2.png');
     game.load.image('ta2', '/assets/phaserassets/ta2.png');
     game.load.image('tha2', '/assets/phaserassets/tha2.png');
     game.load.image('fa2', '/assets/phaserassets/fa2.png');

     game.load.image('kaf', '/assets/phaserassets/kaf.png');
     game.load.image('meem', '/assets/phaserassets/meem.png');
     game.load.image('ya2', '/assets/phaserassets/ya2.png');


     game.load.image('tah', '/assets/phaserassets/tah.png');
     game.load.image('zah', '/assets/phaserassets/zah.png');
     game.load.image('heh', '/assets/phaserassets/heh.png');

    game.load.spritesheet('dude', '/assets/phaserassets/dude.png', 32, 48);

}

var player;
var platforms;
var cursors;

var stars;
var score = 0;
var scoreText;

function create() {

    //  We're going to be using physics, so enable the Arcade Physics system
    game.physics.startSystem(Phaser.Physics.ARCADE);

    //  A simple background for our game
    game.add.sprite(0, 0, 'sky');

    //  The platforms group contains the ground and the 2 ledges we can jump on
    platforms = game.add.group();

    //  We will enable physics for any object that is created in this group
    platforms.enableBody = true;

    // Here we create the ground.
    var ground = platforms.create(0, game.world.height - 24, 'ground');

    //  Scale it to fit the width of the game (the original sprite is 400x32 in size)
    ground.scale.setTo(2, 2);

    //  This stops it from falling away when you jump on it
    ground.body.immovable = true;

    //  Now let's create two ledges

   var ledge = platforms.create(90+50, 450+30, 'ground');
    ledge.scale.setTo(1.2, 0.6);
    ledge.body.immovable = true;
    ledge = platforms.create(135+50, 380+30, 'ground');
    ledge.scale.setTo(1.0, 0.6);
    ledge.body.immovable = true;

    ledge = platforms.create(165+50, 310+30, 'ground');
    ledge.scale.setTo(0.8, 0.6);
    ledge.body.immovable = true;

    ledge = platforms.create(180+90, 240+30, 'ground');
    ledge.scale.setTo(0.5, 0.6);
    ledge.body.immovable = true;

    ledge = platforms.create(195+100, 170+30, 'ground');
       ledge.scale.setTo(0.4, 0.6);
    ledge.body.immovable = true;

    ledge = platforms.create(230+80, 100+30, 'ground');
       ledge.scale.setTo(0.3, 0.6);
    ledge.body.immovable = true;

    ledge = platforms.create(280+50, 30+30, 'ground');
       ledge.scale.setTo(0.2, 0.6);
    ledge.body.immovable = true;

    // The player and its settings
    player = game.add.sprite(32, game.world.height - 150, 'dude');

    //  We need to enable physics on the player
    game.physics.arcade.enable(player);

    //  Player physics properties. Give the little guy a slight bounce.
    player.body.bounce.y = 0.2;
    player.body.gravity.y = 300;
    player.body.collideWorldBounds = true;

    //  Our two animations, walking left and right.
    player.animations.add('left', [0, 1, 2, 3], 10, true);
    player.animations.add('right', [5, 6, 7, 8], 10, true);

    //  Finally some stars to collect
    stars = game.add.group();

    //  We will enable physics for any star that is created in this group
    stars.enableBody = true;

    var star= stars.create(560, 440, 'seen');
    star.text="س";
    star = stars.create(490, 435, 'sheen');
    star.text="ش";
    star = stars.create(420, 442, 'sad');
    star.text="ص";
    star = stars.create(350, 440, 'dad');
    star.text="ض";
    star = stars.create(280, 440, 'qaf');
    star.text="ق";
    star.scale.setTo(0.9,0.9);
    star = stars.create(210, 440, 'lam');
    star.text="ل";
    star.scale.setTo(0.9,0.9);
    star = stars.create(140, 440, 'noon');
    star.text="ن";
    star.scale.setTo(0.9,0.9);
    //////////////////// 2ND LEVEL
   star = stars.create(520, 365, 'alef');
   star.text="أ";
   star =stars.create(460, 375, 'dal');
   star.text="د";
   star =stars.create(400, 370, 'thal');
   star.text="ذ";
   star =stars.create(340, 370, 'ra2');
   star.text="ر";
   star =stars.create(280, 365, 'zen');
   star.text="ز";
   star =stars.create(220, 365, 'waw');
   star.text="و";
   //////////////////// 3RD LEVEL
    star =stars.create(480, 300, 'geem');
    star.text="ج";
    star.scale.setTo(0.9,0.9);

    star =stars.create(420, 300, 'ha2');
    star.text="ح";
    star.scale.setTo(0.9,0.9);
    star =stars.create(360, 298-5, 'kha2');
    star.text="خ";
    star =stars.create(300, 295, 'een');
    star.text="ع";
    star =stars.create(240, 295, 'gheen');
    star.text="غ";
    ///////////////4TH Level

    star =stars.create(460-20, 240-10, 'ba2');
    star.text="ب";
    star =stars.create(400-20, 240-5, 'ta2');
    star.text="ت";
    star =stars.create(340-20, 240-5, 'tha2');
    star.text="ث";
    star =stars.create(280-20, 240-5, 'fa2');
    star.text="ف";
//////////5th
  star =stars.create(460-35, 160, 'kaf');
  star.text="ك";
    star =stars.create(400-35, 160, 'meem');
    star.text="م";
    star =stars.create(340-35, 160, 'ya2');
    star.text="ي";
////6th

    star =stars.create(380, 100-10, 'tah');
    star.text="ط";
    star =stars.create(320, 100-10, 'zah');
    star.text="ظ";
//7th
    star =stars.create(355, 40-10, 'heh');
    star.text="ه";



    //  Here we'll create 12 of them evenly spaced apart
    for (var i = 0; i < 12; i++)
    {
        //  Create a star inside of the 'stars' group
       var star = stars.create(i * 70, 0, 'star');
        
        //  Let gravity do its thing
        //star.body.gravity.y = 300;
        //star.body.gravity.y = 150;

        //  This just gives each star a slightly random bounce value
        //star.body.bounce.y = 0.7 + Math.random() * 0.2;
        //star.body.bounce.y = 0.3 + Math.random() * 0.2;

    }

    //  The score
    scoreText = game.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });

    //  Our controls.
    cursors = game.input.keyboard.createCursorKeys();
    
}

function update() {

    //  Collide the player and the stars with the platforms
    game.physics.arcade.collide(player, platforms);
    game.physics.arcade.collide(stars, platforms);

    //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function
    game.physics.arcade.overlap(player, stars, collectStar, null, this);

    //  Reset the players velocity (movement)
    player.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        player.body.velocity.x = -150;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        player.body.velocity.x = 150;

        player.animations.play('right');
    }
    else
    {
        //  Stand still
        player.animations.stop();

        player.frame = 4;
    }
    
    //  Allow the player to jump if they are touching the ground.
    if (cursors.up.isDown && player.body.touching.down)
    {
        player.body.velocity.y = -350;
    }

}

      function speak(word){
var msg = new SpeechSynthesisUtterance();
msg.volume = 1; // 0 to 1
msg.rate = 1; // 0.1 to 10
msg.pitch = 1; //0 to 2
msg.text = word;
msg.lang = 'ar';

msg.onend = function(e) {
  console.log('Finished in ' + event.elapsedTime + ' seconds.');
};

speechSynthesis.speak(msg);
}

function collectStar (player, star) {
    
    // Removes the star from the screen
    star.kill();
    speak(star.text);

    //  Add and update the score
    score += 10;
    scoreText.text = 'Score: ' + score;

}

</script>

</body>
</html>