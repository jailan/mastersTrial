<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<title>Shooting Game</title>
	<%= button_to "Home", games_home_path, {:class => "button orange", :id => "home"} %>
    <%= content_tag :div, class: "temp_information", data: {temp:@tempshoot, stagy: @shootstageno} do %>
    
<% end %>
</head>
	<style>

	body{
		background-image: url("/assets/paper.jpg");

	}


	}#home{
    position:absolute;
    top:100px;
    left:800px;

}

	#canvas {
		position: absolute; 
		width: 650;
		height: 400;
		vertical-align: bottom;

		/* left:175px;*/
		cursor: none;

		/*background-color: 	#A30052;*/
		border: 3px solid #99CC00;
		background-image: url("/assets/shooting/rainbowopacity.png");
		background-size: 650px 400px;
		background-repeat: no-repeat;

	}

	.btnBlue {
  background: #3baaf5;
  background-image: -webkit-linear-gradient(top, #3baaf5, #1021de);
  background-image: -moz-linear-gradient(top, #3baaf5, #1021de);
  background-image: -ms-linear-gradient(top, #3baaf5, #1021de);
  background-image: -o-linear-gradient(top, #3baaf5, #1021de);
  background-image: linear-gradient(to bottom, #3baaf5, #1021de);
  -webkit-border-radius: 11;
  -moz-border-radius: 11;
  border-radius: 11px;
  font-family: Arial;
  color: #ffffff;
  font-size: 13px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btnBlue:hover {
  background: #0a1bcc;
  background-image: -webkit-linear-gradient(top, #0a1bcc, #042985);
  background-image: -moz-linear-gradient(top, #0a1bcc, #042985);
  background-image: -ms-linear-gradient(top, #0a1bcc, #042985);
  background-image: -o-linear-gradient(top, #0a1bcc, #042985);
  background-image: linear-gradient(to bottom, #0a1bcc, #042985);
  text-decoration: none;
}
.btnGreen {
  background: #5cb524;
  background-image: -webkit-linear-gradient(top, #5cb524, #255705);
  background-image: -moz-linear-gradient(top, #5cb524, #255705);
  background-image: -ms-linear-gradient(top, #5cb524, #255705);
  background-image: -o-linear-gradient(top, #5cb524, #255705);
  background-image: linear-gradient(to bottom, #5cb524, #255705);
  -webkit-border-radius: 11;
  -moz-border-radius: 11;
  border-radius: 11px;
  font-family: Arial;
  color: #ffffff;
  font-size: 13px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btnGreen:hover {
  background: #0acc11;
  background-image: -webkit-linear-gradient(top, #0acc11, #257a1d);
  background-image: -moz-linear-gradient(top, #0acc11, #257a1d);
  background-image: -ms-linear-gradient(top, #0acc11, #257a1d);
  background-image: -o-linear-gradient(top, #0acc11, #257a1d);
  background-image: linear-gradient(to bottom, #0acc11, #257a1d);
  text-decoration: none;
}
.btnYellow {
  background: #ffff00;
  background-image: -webkit-linear-gradient(top, #ffff00, #ffd500);
  background-image: -moz-linear-gradient(top, #ffff00, #ffd500);
  background-image: -ms-linear-gradient(top, #ffff00, #ffd500);
  background-image: -o-linear-gradient(top, #ffff00, #ffd500);
  background-image: linear-gradient(to bottom, #ffff00, #ffd500);
  -webkit-border-radius: 11;
  -moz-border-radius: 11;
  border-radius: 11px;
  font-family: Arial;
  color: #ffffff;
  font-size: 13px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btnYellow:hover {
  background: #ffff00;
  background-image: -webkit-linear-gradient(top, #ffff00, #f5b105);
  background-image: -moz-linear-gradient(top, #ffff00, #f5b105);
  background-image: -ms-linear-gradient(top, #ffff00, #f5b105);
  background-image: -o-linear-gradient(top, #ffff00, #f5b105);
  background-image: linear-gradient(to bottom, #ffff00, #f5b105);
  text-decoration: none;
}
.btnOrange{

  background: #ff7700;
  background-image: -webkit-linear-gradient(top, #ff7700, #ff9b05);
  background-image: -moz-linear-gradient(top, #ff7700, #ff9b05);
  background-image: -ms-linear-gradient(top, #ff7700, #ff9b05);
  background-image: -o-linear-gradient(top, #ff7700, #ff9b05);
  background-image: linear-gradient(to bottom, #ff7700, #ff9b05);
  -webkit-border-radius: 11;
  -moz-border-radius: 11;
  border-radius: 11px;
  font-family: Arial;
  color: #ffffff;
  font-size: 13px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btnOrange:hover {
  background: #fa8d3a;
  background-image: -webkit-linear-gradient(top, #fa8d3a, #ffb12b);
  background-image: -moz-linear-gradient(top, #fa8d3a, #ffb12b);
  background-image: -ms-linear-gradient(top, #fa8d3a, #ffb12b);
  background-image: -o-linear-gradient(top, #fa8d3a, #ffb12b);
  background-image: linear-gradient(to bottom, #fa8d3a, #ffb12b);
  text-decoration: none;
}
.btnRed {
  background: #ff000d;
  background-image: -webkit-linear-gradient(top, #ff000d, #8c1414);
  background-image: -moz-linear-gradient(top, #ff000d, #8c1414);
  background-image: -ms-linear-gradient(top, #ff000d, #8c1414);
  background-image: -o-linear-gradient(top, #ff000d, #8c1414);
  background-image: linear-gradient(to bottom, #ff000d, #8c1414);
  -webkit-border-radius: 11;
  -moz-border-radius: 11;
  border-radius: 11px;
  font-family: Arial;
  color: #ffffff;
  font-size: 13px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btnRed:hover {
  background: #c70000;
  background-image: -webkit-linear-gradient(top, #c70000, #ff4929);
  background-image: -moz-linear-gradient(top, #c70000, #ff4929);
  background-image: -ms-linear-gradient(top, #c70000, #ff4929);
  background-image: -o-linear-gradient(top, #c70000, #ff4929);
  background-image: linear-gradient(to bottom, #c70000, #ff4929);
  text-decoration: none;
}


	.button {
		display: inline-block;
		outline: none;
		cursor: pointer;
		text-align: center;
		text-decoration: none;
		font: 14px/100% Arial, Helvetica, sans-serif;
		padding: .5em 2em .55em;
		text-shadow: 0 1px 1px rgba(0,0,0,.3);
		-webkit-border-radius: .5em; 
		-moz-border-radius: .5em;
		border-radius: .5em;
		-webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);
		-moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);
		box-shadow: 0 1px 2px rgba(0,0,0,.2);
		float:right;
		margin-right: 20px;
		width:80px;



	}
	.orange {
		color: #fef4e9;
		border: solid 1px #da7c0c;
		background: #f78d1d;
		background: -webkit-gradient(linear, left top, left bottom, from(#faa51a), to(#f47a20));
		background: -moz-linear-gradient(top,  #faa51a,  #f47a20);
		filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#faa51a', endColorstr='#f47a20');
	}
	.orange:hover {
		background: #f47c20;
		background: -webkit-gradient(linear, left top, left bottom, from(#f88e11), to(#f06015));
		background: -moz-linear-gradient(top,  #f88e11,  #f06015);
		filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#f88e11', endColorstr='#f06015');
	}
	.orange:active {
		color: #fcd3a5;
		background: -webkit-gradient(linear, left top, left bottom, from(#f47a20), to(#faa51a));
		background: -moz-linear-gradient(top,  #f47a20,  #faa51a);
		filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#f47a20', endColorstr='#faa51a');
	}


	.button:hover {
		text-decoration: none;
	}
	.button:active {
		position: relative;
		top: 1px;
	}

	#play_button {
		position:relative;
		transition: .5s ease;


	}
	#startGameButton
	{

		width: 150px;
		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		font-size: 112.5%;
		cursor: pointer;
		color: #fff;
		display: block;
		/*background-color: #069; Baby Blue*/
		/*background-color:#006;navy*/
		background-color: #b3005b;
		position:relative;
		transition: .5s ease;
		top: 420px;

		right: 835px;
	/*font-family: 'Cherry Swash', cursive;
	font-weight: 400;
	color: rgb(20, 166, 0);
	padding-bottom: 10px;
	display: block;*/

}
#level1{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level1{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level2{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level3{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level4{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level5{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level5a{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#level5b{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;

}
#level5c{

		padding-bottom: 10px;
		text-align: center;
		margin: 0.2em 0 0 13px;
		position:relative;
		transition: .5s ease;
		top: 432px;
		left: 300px;
}
#score {
	position:relative;
	height:550px;
	width:350px;

	font-size: 20px;
	color: #a67900;
	margin-left: 800px;




}



div.img {
	margin: 5px;
	padding: 5px;
	border: 1px solid #0000ff;
	height: auto;
	width: auto;
	float: left;
	text-align: center;
}

</style>

<body>
<canvas id="canvas" width="650" height="400"> </canvas>
<a  href='#' class="button orange" id="startGameButton" onclick="window.location.reload()">New Game</a>


	  <a  href='#' class="btnBlue" id="level1">1</a>
    <a  href='#' class="btnGreen" id="level2">2</a>
    <a  href='#' class="btnYellow" id="level3">3</a>
    <a  href='#' class="btnOrange" id="level4">4</a>
    <a  href='#' class="btnRed" id="level5a">5a</a> 
    <a  href='#' class="btnRed" id="level5b">5b</a> 
    <a  href='#' class="btnRed" id="level5c">5c</a> 


<canvas id="score" width="400" height="600"></canvas>



    <!--<script src='explosion1.js'></script>
    <script src='thing1.js'></script>
    <script src='rocks1.js'></script>-->
    <script>

    var targetX = 0, targetY = 0, shots = 0, hits = 0, accuracy = 0, correctShots=0,
    wrongShots=0, n=0, frames;
    var order=0;
    var flags=[10,10,10];
    var shootletter = $('.temp_information').data('temp'); 
    var yalla = $('.temp_information').data('stagy'); 

    var shootstagy = yalla;
    var shootstage = setStagy(shootstagy);

    var shootsubstage5= setsubStage();

    //THIS IS THE ONE FOR SOUNDS ONLY
  //  var a = new Array("تمساح","تفاح","توت", "تَمْر","تمثال", "تِلِيفُون" ,"تلميذ");
  var a = new Array("بَطّة","بِنْت","بُرتقالة");



    window.requestAnimFrame = (function() {
    	return window.requestAnimationFrame ||
    	window.webkitRequestAnimationFrame ||
    	window.mozRequestAnimationFrame ||
    	window.oRequestAnimationFrame ||
    	window.msRequestAnimationFrame ||
    	function(callback) {
    		window.setTimeout(callback, 1000 / 60);
    	};
    })();
    
    function Thing(mapX, mapY, x, y, canvas, letter) {
    	this.letter=letter;
    	this.x = x;
    	this.y = y;	
    	this.mapX = mapX;
    	this.mapY = mapY;
    	this.height = 80;// JUST ZZOMING IN/OUT THE CUTTED IMAGE
    	this.width = 80;
    	this.direction = Math.floor((Math.random()*359));
    	this.speed = Math.floor((Math.random()*10) + 5);
    	this.canvas = canvas;
    	this.erratic = (Math.floor((Math.random()* 4) + 1) === 1);
    	this.gravitationalPull = 0;
    	this.tick = 0;
    	this.changeAt = Math.floor((Math.random()*50) + 1);
    	this.hit = false;
    };

    Thing.prototype.draw = function(ctx, sprite) {

    	if(this.hit === false) {

    		ctx.drawImage(sprite, this.getMapX(), this.getMapY(),
    			280, 280, 
    			this.getX(), this.getY(), 
    			this.getWidth(), this.getHeight()); /// HERE WE CONTROL HOW TO CUT
    	}

    	return this;
    };

    //Thing.prototype.move = function() {

    	//var delta = 0.2;

    	// this.x += Math.cos(this.toRad(this.direction)) * delta * this.speed;
    	// this.y -= Math.sin(this.toRad(this.direction)) * delta * this.speed;

    //	this.direction+= this.gravitationalPull;

    	// if(this.direction < 0) {
    	// 	this.direction += 360;
    	// } else if(this.direction > 360) {
    	// 	this.direction -= 360;
    	// }

    	//this.tick++;

    	// if(this.tick > this.changeAt) {
    	// 	this.tick = 0;
    	// 	this.gravitationalPull = Math.floor((Math.random()*6));

    	// 	if(this.erratic) {
    	// 		this.direction = Math.floor((Math.random()*359));
    	// 		//this.speed = Math.floor((Math.random()*10)+5);
    	// 		this.speed = 8;

    	// 	}
    	// }
    //};

    Thing.prototype.toRad = function(v) {
    	return v * Math.PI / 180;
    };

    Thing.prototype.checkBoundaryCollision = function() {

    	if (this.x + this.width > this.canvas.width ||
    		this.x < 0) {
    		this.direction = 2 * 0 - this.direction - 180;
    } else if(this.y < 0 ||
    	this.y + this.height > this.canvas.height) {
    	this.direction = 2 * 90 - this.direction - 180;
    }
};

Thing.prototype.correctXY = function() {

	if(this.x + this.width >= this.canvas.width) {
		this.x = this.canvas.width - this.width ;
	} else if(this.x < 0) {
		this.x = 0;
	} else if(this.y < 0) {
		this.y = 0;
	} else if(this.y + this.height >= this.canvas.height) {
		this.y = this.canvas.height - this.height ;
	}
};

Thing.prototype.getX = function() {
	return this.x;
};

Thing.prototype.getY = function() {
	return this.y;
};

Thing.prototype.getMapX = function() {
	return this.mapX;
};

Thing.prototype.getMapY = function() {
	return this.mapY;
};

Thing.prototype.getWidth = function() {
	return this.width;
};

Thing.prototype.getHeight = function() {
	return this.height;
};

Thing.prototype.setHit = function() {
	this.hit = true;
};

Thing.prototype.getHit = function() {
	return this.hit;
};

function Explosion(x, y, audio) {

	this.x = x;
	this.y = y;
	this.drawing = true;
	this.explosionFrame = 15;
	this.width = 200;
	this.height = 200;

	audio.play();

};

Explosion.prototype.getDrawing = function() {

	return this.drawing;

};

var explosions = [], ctx, canvas, sprites = [], sprite = null, cvx, canvaso,targetLetter, frame, sprite2;
var done = 0;

Explosion.prototype.checkHits = function(things) {

	if(this.drawing === false) {
		return 0;
	}


	var centreX = (this.x - 100)  + (this.width / 2),
	centreY = (this.y - 90) + (this.height / 2),
	hits = 0;

	for(i = 0; i < things.length; i++) {

		if(centreX > things[i].getX() &&
			centreX < things[i].getX() + things[i].getWidth() &&
			centreY > things[i].getY() &&
			centreY < things[i].getY() + things[i].getHeight() &&
			things[i].getHit() === false) {

			things[i].setHit();

		hits++;

		    //alert('ID: '+things[i].letter);
		    //var identity=things[i].getLetter();
		    if(shootstage <5){
		    if(things[i].letter <=2){
		    	n=i;
		    	flags[order]=i;
		    	order=order+1;
		    	correctShots++;
		    	var textq=a[things[i].letter];
          speak(textq);
		    	
		    	if(correctShots==3){
		    		done =1;
		    		new Audio('/assets/Audio/applause.mp3').play();
		    		setTimeout(function(){ UpdateShootStage(); }, 5000);
		    		
		    	}
		}
		else{
			wrongShots++;
			new Audio('/assets/Audio/no.mp3').play();
		}
	}
	else{
				    if(things[i].letter === shootsubstage5-1){
		    	n=i;
		    	flags[order]=i;
		    	order=order+1;
		    	correctShots++;
		    	var textq=a[things[i].letter];
          speak(textq);
		    	
		    	if(correctShots===1){
		    		done =1;
		    		new Audio('/assets/Audio/applause.mp3').play();
		    		setTimeout(function(){ UpdateShootStage(); }, 5000);
		    	}
		}
		else{
			wrongShots++;
			new Audio('/assets/Audio/no.mp3').play();
		}
	}
		things[i].setHit();

	}
}

return hits;
};  

Explosion.prototype.draw = function(ctx, explosion) {

	if(this.drawing === false) {
		return this;
	}

	try {

		if(this.explosionFrame-- <= 0) {
			this.drawing = false;
		}

		//Draw explostion
		ctx.drawImage(explosion, ((this.explosionFrame % 10) -1) * 65, 0,
			65, 65, 
			this.x - 100, this.y - 90, 
			this.width, this.height);

	}
	catch(e) {

	}
	return this;

};



function loadSprite() {

	sprite = new Image();
	//sprite.src = '/assets/shooting/trial134.png'; wrong one
	//sprite.src = '/assets/shooting/trial'+shootletter+'.png'; CORRECT ONE
	//sprite.src = '/assets/shooting/yaRab.png'; 

 
sprite.src = '/assets/shooting/l'+shootletter+'/spritewords'+shootstage+'.png';
	
	sprite2 = new Image();
	sprite2.src = '/assets/shooting/l'+shootletter+'/trial5.png';

	target = new Image();
	target.src = '/assets/shooting/target.gif';

	explosion = new Image();
	explosion.src = '/assets/shooting/explosion.png';

	targetLetter = new Image();
	targetLetter.src = '/assets/shooting/l'+shootletter+'/targetba2.png';

	/*target1 = new Image();
	target1.src = '/assets/shooting/1.jpg';

	target2 = new Image();
	target2.src = '/assets/shooting/2.jpg';

	target3= new Image();
	target3.src = '/assets/shooting/3.jpg';*/

	frame = new Image();
	frame.src = '/assets/shooting/frame3.png';

	frames = new Image();
	frames.src = '/assets/shooting/frames.png';



}

function createThings() {
//*MAAAAAP
	var i;
	    /*spriteMap =  [
	    [820, 550],[300, 350],[600, 350],[1100, 350],[1350, 350],[600,150],[1100, 150],
	    [300, 550],[600, 550],[1100,550],[1350, 550],
	    [820, 350],[300, 150],[820,150],[1350, 150]];*/
    // spriteMap =  [
	   //  [830, 885],[60, 450],[850, 450],[1600, 455],[470,25],[1290, 25]];

spriteMap =  [
	   [1600, 455],[60, 450],[830, 885], [850, 450],[470,25],[1290, 25]];


	   /*THE FINAL CUT  spriteMap =  [
	    [600, 550],[300, 350],[820, 350],[1100, 350],[1350, 350],[300, 150],[820, 150],
		[300, 550],[820, 550] ,[1100, 550],[1350, 550],
	    [600, 350],[600, 150] ,[1100, 150],[1350, 150]
	    ];
	    [600, 550],[300, 350],[820, 350],[1100, 350],[1350, 350],[300, 150],[820, 150],
		[300, 550],[820, 550] ,[1100, 550],[1350, 550],
		[600, 350],[600, 150] ,[1100, 150],[1350, 150]*/


	    //from(0-->6)[i.e 1,5,7,8,9,10,12]
	    //the ong one[2,5,6,8,9,11,13]

	    /*  spriteMap =  [
		[300, 550],[600, 550],[820, 550] ,[1100, 550],[1350, 550],
	    [300, 350],[600, 350],[820, 350] ,[1100, 350],[1350, 350],
	    [300, 150],[600, 150],[820, 150] ,[1100, 150],[1350, 150]
	    ];*/

	    for(i = 0; i < 6; i++) { //15
	    	sprites.push(createThing(spriteMap,i));
	    }
	}
		//var placeholders=20;

		function createThing(spriteMap,n) {
      // var cur, map = spriteMap[Math.floor(Math.random() * (spriteMap.length - 1))];
      var cur, map = spriteMap[n];
      cur = new Thing(
      	map[0],
      	map[1],
      	Math.floor((Math.random()*canvas.width)+1),
      	Math.floor((Math.random()*canvas.height)+1),
      	canvas,n
      	);
	    //alert('IDE: '+cur.x+ "NNNN: "+n);

	    return cur;
	    
	}

	function init() {

		canvas = document.getElementById('canvas');
		ctx = canvas.getContext('2d');
		canvaso = document.getElementById('score');
		cvx = canvaso.getContext('2d');
		canvas.onmousemove = moveTarget;
	  canvas.ontouchmove = moveTarget;
		canvas.onclick = fire;
		//canvas.ontouch = fire ;
		resizeCanvas();
		loadSprite();
		createThings();

	}

	function touchHandler(event) {
    var touch = event.originalEvent.changedTouches[0];
    var simulatedEvent = document.createEvent("MouseEvent");
        simulatedEvent.initMouseEvent({
        touchstart: "mousedown",
        touchmove: "mousemove",
        touchend: "mouseup",
        touchcancel: "mouseout"
    }[event.type], true, true, window, 1,
        touch.screenX, touch.screenY,
        touch.clientX, touch.clientY, false,
        false, false, false, 0, null);

    touch.target.dispatchEvent(simulatedEvent);
    event.preventDefault();
}

function initTouch() {
    document.addEventListener("touchstart", touchHandler, true);
    document.addEventListener("touchmove", touchHandler, true);
    document.addEventListener("touchend", touchHandler, true);
    document.addEventListener("touchcancel", touchHandler, true);


}

	function speak(word){
var msg = new SpeechSynthesisUtterance();
msg.volume = 1; // 0 to 1
msg.rate = 1; // 0.1 to 10
msg.pitch = 1; //0 to 2
msg.text = word;
msg.lang = 'ar';

msg.onend = function(e) {
  console.log('Finished in ' + event.elapsedTime + ' seconds.');
};

speechSynthesis.speak(msg);
}
	 function getSpeech(fieldClicked) {
    $.ajax({
        url: 'ool',
        type: 'get',
        contentType: 'application/json; charset=UTF-8',
        accept: 'application/json',
        dataType: 'json',
        data: {speech:fieldClicked}
    
    });
};
	
	function clearCanvas() {
		 //ctx.fillRect(0, 0, canvas.width, canvas.height);

		 ctx.clearRect(0, 0, canvas.width, canvas.height); 
		 cvx.clearRect(0, 0, canvaso.width, canvaso.height); 
		 var img = document.getElementById("/assets/paper.jpg");
		 ctx.fillStyle = img;
   // var pat = ctx.createPattern(img, direction);
   //ctx.fillRect(0, 0, canvas.width, canvas.height);
    //ctx.rect(0, 0, 150, 100);
   // ctx.fillStyle = img;
   // ctx.fill();
 // ctx.fillRect(0, 0, canvas.width, canvas.height);
	/*ctx.fillStyle = "#006";
	ctx.fillRect(0, 0, canvas.width, canvas.height);*/

}

	/*function resetBoard(n){

		 for(i = 0; i < sprites.length; i++) {

		if(sprites[i].letter<=6 && sprites[i].getHit()===true){
			

		 for(j = 0; j < placeholders-20; j=j+20) {
		 //cvx.fillText("Here" ,10,j);
		
		 cvx.drawImage(sprite,sprites[j/20].mapX,sprites[j/20].mapY,170,170,10,j,90,60);

	}
		 //cvx.drawImage(sprite,820,550,170,170,10,80);}
		 //alert('placoooo: '+placeholders);
		}

	}

}*/
var totalScore = 0;
function congratsy(){
	
cvx.fillStyle = "#B8005C";
cvx.font = "bold 24pt Arial";
ctx.fillStyle ="#5200A3";
ctx.font = "bold 24pt Arial";
//cvx.fillText("YOU WON !",130,230);
totalScore = correctShots*10 - wrongShots*2; 

ctx.fillText("YOU WON !",240,240);
ctx.font = "bold 20pt Arial";
ctx.fillStyle ="orangered";
ctx.fillText("Score: "+totalScore,253,280);
 //cancelAnimationFrame();
}


function resetBoard(n){
	var j=260;
	var m=360;

for(i = 0; i <flags.length; i++) {
		if(flags[i]<10){

 // cvx.drawImage(targetShotCorrectly,170,170,310,420,90,60);

	var targetShotCorrectly =new Image();
	if (shootstage ===5){
		targetShotCorrectly.src = '/assets/shooting/l'+shootletter+'/'+shootsubstage5+'p.png';
		 	cvx.drawImage(targetShotCorrectly,160-60,403-200,70,70);
	}
	else if(shootstage ===2 || shootstage ===2 ){
	targetShotCorrectly.src = '/assets/shooting/l'+shootletter+'/'+(flags[i]+1)+'w.png';
 	cvx.drawImage(targetShotCorrectly,265-(flags[i]*100)-60,403-200,70,70);}
	else{
		targetShotCorrectly.src = '/assets/shooting/l'+shootletter+'/'+(flags[i]+1)+'p.png';
		 	cvx.drawImage(targetShotCorrectly,265-(flags[i]*100)-60,403-200,70,70);
	}

	//cvx.drawImage(sprite,sprites[flags[i]].mapX,sprites[flags[i]].mapY,170,170,m,420,90,60);
		}
	/*for(i = 0; i <flags.length; i++) {
		if(flags[i]<10){
           if(i<3){
			cvx.drawImage(sprite,sprites[flags[i]].mapX,sprites[flags[i]].mapY,170,170,j,290,90,60);
			j = j - 100;}
			else{
				cvx.drawImage(sprite,sprites[flags[i]].mapX,sprites[flags[i]].mapY,170,170,m,420,90,60);
			m = m - 100;

			}

		} THIS WAS USED WHEN WE USED TO CUT THE TARGET AND PUT IT DOWN IN FRAME*/


	}
	if (flags[2]<10){
		done=1;
	}
}

function resetBoardFinal(){

	if (flags[2]<10){
		done=1;
	}
}




function start() {

	clearCanvas();
	resetBoard(n);



	for(i = 0; i < sprites.length; i++) {
		// if (i===3)
	 //   {
	 	sprites[i].draw(ctx, sprite);
	 	//}
	 // else{
		// sprites[i].draw(ctx, sprite).move();}
		sprites[i].checkBoundaryCollision(); 
		sprites[i].correctXY();

		/* cvx.fillStyle = " #000033";
	     cvx.font = "bold 16pt Arial";
		if(sprites[i].letter<=6 && sprites[i].getHit()===true){
		 cvx.fillText("Here goes the first correct hit !  " ,80,40);
		 placeholders = placeholders +40;
		 //alert('placoooo: '+placeholders);
		}*/


	}


	for(i =0; i < explosions.length; i++) {
		explosions[i].draw(ctx, explosion);
		hits += explosions[i].checkHits(sprites);
	}

	if(shots > 0) {
		accuracy = Math.round((hits / shots) * 100);
	}

	    //ctx.fillStyle = "#cfcfcf"; //grey
	    ctx.fillStyle = " #000033";//navy
	    //ctx.fillStyle = "#99CC00";green



	    ctx.font = "bold 16pt Arial";
	   /* ctx.fillText("Shots: " + shots + " Hits: " + hits + 
	   	" Correct: " + correctShots + " Wrong: " + wrongShots , 10, 30);*/
cvx.fillStyle = " #000033";

cvx.font = "bold 16pt Arial";

// cvx.fillText("Shots: " + shots ,180,30-10);
// cvx.fillText("Hits: " + hits ,180,70-10);
// cvx.fillStyle ="#5200A3";
// cvx.fillText("Correct Shots: " +  correctShots ,180,110-10);
// cvx.fillStyle ="orangered";
// cvx.fillText("Wrong Shots: " +  wrongShots ,180,150-10);
// cvx.fillStyle = " #000033";
// cvx.fillText("Accuracy: " + accuracy ,180,190-10);
// cvx.drawImage(targetLetter,15-15,53-10,110,110);
// cvx.drawImage(frame,0,38,115,115);
var d = 260;
if (shootstage === 1 || shootstage===2 ){
for (t=0;t<3;t++){
	cvx.drawImage(frames,d-60,280-200,80,80);
	targetshoot= new Image();
	targetshoot.src = '/assets/shooting/l'+shootletter+'/'+(t+1)+'.jpg';
	cvx.drawImage(targetshoot,d+5-60,285-200,70,70);
	d-=100;
}}

else{ 
	if (shootstage === 3 || shootstage=== 4){

	cvx.drawImage(frames,135+10-60,280-200,100,100);
	targetshoot= new Image();
	targetshoot.src = '/assets/shooting/l'+shootletter+'/letterba2.jpg';
	cvx.drawImage(targetshoot,140+10-60,285-200,90,90);


}
else{ // IN CASE OF STAGE 5
	cvx.drawImage(frames,135+10-60,280-200,100,100);
	targetshoot= new Image();
	targetshoot.src = '/assets/shooting/l'+shootletter+'/'+shootsubstage5+'d.jpg';
	cvx.drawImage(targetshoot,140+10-60,285-200,90,90);
}
}
if(shootstage === 5){
		cvx.drawImage(frames,160-60,400-200,80,80);
}
else{
var f = 260;
for (t=0;t<3;t++){
	cvx.drawImage(frames,f-60,400-200,80,80);
	f-=100;
}}
if(done>0){
	congratsy();
}
// cvx.fillText("OKAY? .. OKAY !" ,80,placo);
	    //Draw target
	    if(done ===0){
	    ctx.drawImage(target, 0,0, 512, 512, 
	    	targetX - 50, targetY - 50, 
	    	70, 70);

	   }
	    requestAnimFrame(start);
	    
	}


	function resizeCanvas() {

	   //ctx.canvas.width = window.innerWidth;
	  // ctx.canvas.height = window.innerHeight;
	  ctx.canvas.width = 650;
	  ctx.canvas.height = 400;
	}

	function fixPageXY(e) {

		if (e.pageX === null && e.clientX !== null ) {

			e.pageX = e.clientX + (html.scrollLeft || body && body.scrollLeft || 0);
			e.pageX -= html.clientLeft || 0;

			e.pageY = e.clientY + (html.scrollTop || body && body.scrollTop || 0);
			e.pageY -= html.clientTop || 0;
		}
	}

	function moveTarget(e) {

		e = e || window.event;
		fixPageXY(e);
		targetX = e.pageX;
		targetY = e.pageY;

	}

	function fire() {

		explosions.push(new Explosion(targetX, targetY, new Audio('/assets/Audio/bang.wav')));
		shots++;

	}
	     function chooseShootStage(fieldClicked) {
    $.ajax({
        url: 'shooting',
        type: 'get',
        contentType: 'application/json; charset=UTF-8',
        accept: 'application/json',
        dataType: 'json',
        data: {myshootstage:fieldClicked}
    
    });
};

	function sendStage(stageNo){
chooseShootStage(stageNo);

}

function UpdateShootStage(){
	
	if (shootstagy<6){
		shootstagy++;


	}
	else{
				shootstagy=1;

	}
	//window.location.reload()
				sendStage(shootstagy);
		yalla= $('.temp_information').data('stagy');
		location.reload();
}
	function setsubStage(){
		if(shootstagy === 5)
return 1;
		if(shootstagy === 6)
return 2;
		if(shootstagy === 7)
return 3;

}
	function setStagy(number){
		if(number >= 5)
			return 5;
		else{
			return number;
		}


}

	
	// resize the canvas to fill browser window dynamically
	window.addEventListener('resize', resizeCanvas, false);
var yalla;
	$('#level1').click(function() {
		sendStage(1);
		yalla= $('.temp_information').data('stagy');
		location.reload();
		//alert(shootstage); 

	});
		$('#level2').click(function() {
		sendStage(2);
	   		yalla= $('.temp_information').data('stagy');
		location.reload();
	
	});
		$('#level3').click(function() {
		sendStage(3);
		yalla= $('.temp_information').data('stagy');
		location.reload();
	});
		$('#level4').click(function() {
		sendStage(4);
		yalla= $('.temp_information').data('stagy');
		location.reload();
	});
		$('#level5a').click(function() {
sendStage(5);

		yalla= $('.temp_information').data('stagy');		
		  location.reload();

	});
				$('#level5b').click(function() {
sendStage(6);

		yalla= $('.temp_information').data('stagy');
		location.reload();

	});
						$('#level5c').click(function() {
sendStage(7);

		yalla= $('.temp_information').data('stagy');

		location.reload();

	});
	// Start the process

	window.onload = function() {
		init();
		start();
		initTouch();
	   //new Audio('background-music.wav').play();
	};

	

		



	</script>
</body>
</html>